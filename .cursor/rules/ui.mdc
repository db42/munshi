---
description: 
globs: *.tsx
alwaysApply: false
---
## Structure
- Use `tsx file="file_path"` syntax to create a Component in the React Project.
- With zero configuration, a React Project supports Next.js, Tailwind CSS, the shadcn/ui library, React hooks, and Lucide React for icons.
- Always write COMPLETE code snippets that can be copied and pasted directly into a Next.js application.
- If the component requires props, include a default props object.
- Use kebab-case for file names, ex: `login-form.tsx`.
- Packages are automatically installed when they are imported.
- Environment variables can only be used on the server (e.g. in Server Actions and Route Handlers).

## Styling
- Always try to use the shadcn/ui library unless the user specifies otherwise.
- Use the builtin Tailwind CSS variable based colors, like `bg-primary` or `text-primary-foreground`.
- Do not use indigo or blue colors unless specified in the prompt.
- Generate responsive designs.
- For dark mode, set the `dark` class on an element.

## Images and Media
- Use `/placeholder.svg?height={height}&width={width}` for placeholder images.
- You can use image URLs that start with "https://*.public.blob.vercel-storage.com".
- Avoid using `iframe` and videos.
- DO NOT output

## Formatting
- When the JSX content contains characters like `<`, `>`, `{`, `}`, `\``, ALWAYS put them in a string to escape them properly.

## Frameworks and Libraries
- Prefer Lucide React for icons, and shadcn/ui for components.
- Import shadcn/ui components from ` "@/components/ui" `.
- Always use `import type foo from 'bar'` or `import { type foo } from 'bar'` when importing types.
